"use strict";(self.webpackChunkreact_native_iap_docs=self.webpackChunkreact_native_iap_docs||[]).push([[2987],{571:(e,i,n)=>{n.d(i,{A:()=>o});var t=n(6540),r=n(4848);function s({className:e="adfit",style:i,unit:n,height:s,width:o}){return(0,t.useEffect)(()=>{const i=setTimeout(()=>{const i=document.querySelector(`.${e}`);if(!i)return void console.warn(`AdFit: Element with class "${e}" not found`);const t=i.querySelectorAll(".kakao_ad_area"),r=i.querySelectorAll('script[src*="kas/static/ba.min.js"]');t.forEach(e=>e.remove()),r.forEach(e=>e.remove());const c=document.createElement("ins"),d=document.createElement("script");c.className="kakao_ad_area",c.style.cssText="display:none; width:100%;",d.async=!0,d.type="text/javascript",d.src="//t1.daumcdn.net/kas/static/ba.min.js",c.setAttribute("data-ad-width",o.toString()),c.setAttribute("data-ad-height",s.toString()),c.setAttribute("data-ad-unit",n),i.appendChild(c),i.appendChild(d)},100);return()=>clearTimeout(i)},[e,n,s,o]),(0,r.jsx)("div",{style:i,children:(0,r.jsx)("div",{className:e})})}function o(){return(0,r.jsx)(s,{unit:"DAN-YTmjDwlbcP42HBg6",height:100,width:320,className:"adfit-top",style:{flex:1,marginTop:24,marginBottom:24}})}},3625:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>a,contentTitle:()=>d,default:()=>h,frontMatter:()=>c,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"api/types","title":"Types","description":"OpenIAP Type Definitions","source":"@site/versioned_docs/version-14.1/api/types.md","sourceDirName":"api","slug":"/api/types","permalink":"/react-native-iap/docs/14.1/api/types","draft":false,"unlisted":false,"editUrl":"https://github.com/hyochan/react-native-iap/tree/main/docs/versioned_docs/version-14.1/api/types.md","tags":[],"version":"14.1","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"API Reference","permalink":"/react-native-iap/docs/14.1/api/"},"next":{"title":"Core Methods","permalink":"/react-native-iap/docs/14.1/api/methods/core-methods"}}');var r=n(4848),s=n(8453),o=n(571);const c={},d="Types",a={},l=[{value:"OpenIAP Type Definitions",id:"openiap-type-definitions",level:2},{value:"Nitro Modules Integration",id:"nitro-modules-integration",level:2},{value:"Key Type Categories",id:"key-type-categories",level:2},{value:"Product Types",id:"product-types",level:3},{value:"Purchase Types",id:"purchase-types",level:3},{value:"Request Types",id:"request-types",level:3},{value:"Platform-Specific Types",id:"platform-specific-types",level:3},{value:"Type Conversion Utilities",id:"type-conversion-utilities",level:2},{value:"Error Types",id:"error-types",level:2},{value:"Migration Notes",id:"migration-notes",level:2},{value:"From v13.x to v14.0.0-rc",id:"from-v13x-to-v1400-rc",level:3}];function p(e){const i={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.header,{children:(0,r.jsx)(i.h1,{id:"types",children:"Types"})}),"\n",(0,r.jsx)(o.A,{}),"\n",(0,r.jsx)(i.h2,{id:"openiap-type-definitions",children:"OpenIAP Type Definitions"}),"\n",(0,r.jsxs)(i.p,{children:["For comprehensive type definitions and interfaces, please refer to the ",(0,r.jsx)(i.strong,{children:(0,r.jsx)(i.a,{href:"https://www.openiap.dev/docs/types",children:"OpenIAP Types Documentation"})}),"."]}),"\n",(0,r.jsx)(i.p,{children:"React Native IAP conforms to the OpenIAP specification, which provides standardized type definitions across all in-app purchase implementations."}),"\n",(0,r.jsx)(i.h2,{id:"nitro-modules-integration",children:"Nitro Modules Integration"}),"\n",(0,r.jsxs)(i.p,{children:["React Native IAP uses Nitro Modules for high-performance native bridge communication. The core types are imported from ",(0,r.jsx)(i.code,{children:"react-native-nitro-modules"}),":"]}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-typescript",children:"import type {HybridObject} from 'react-native-nitro-modules';\n"})}),"\n",(0,r.jsx)(i.h2,{id:"key-type-categories",children:"Key Type Categories"}),"\n",(0,r.jsx)(i.h3,{id:"product-types",children:"Product Types"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"NitroProduct"})," - Product data from the store"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"Product"})," - TypeScript-friendly product interface"]}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"purchase-types",children:"Purchase Types"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"NitroPurchase"})," - Purchase transaction data"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"Purchase"})," - TypeScript-friendly purchase interface"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"NitroPurchaseResult"})," - Purchase operation result"]}),"\n"]}),"\n",(0,r.jsxs)(i.blockquote,{children:["\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"Important Migration Note"}),":"]}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"purchaseToken"})," is now the unified field for both iOS and Android"]}),"\n",(0,r.jsx)(i.li,{children:"On iOS: Contains the JWS representation (StoreKit 2)"}),"\n",(0,r.jsx)(i.li,{children:"On Android: Contains the purchase token"}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Deprecated fields"}),": ",(0,r.jsx)(i.code,{children:"jwsRepresentationIOS"})," and ",(0,r.jsx)(i.code,{children:"purchaseTokenAndroid"})," are deprecated and will be removed in a future version"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"request-types",children:"Request Types"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"NitroPurchaseRequest"})," - Unified purchase request"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"RequestPurchaseProps"})," - Platform-specific purchase parameters"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"RequestSubscriptionProps"})," - Subscription purchase parameters"]}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"platform-specific-types",children:"Platform-Specific Types"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["iOS: Types suffixed with ",(0,r.jsx)(i.code,{children:"IOS"})," (e.g., ",(0,r.jsx)(i.code,{children:"NitroRequestPurchaseIos"}),")"]}),"\n",(0,r.jsxs)(i.li,{children:["Android: Types suffixed with ",(0,r.jsx)(i.code,{children:"Android"})," (e.g., ",(0,r.jsx)(i.code,{children:"NitroRequestPurchaseAndroid"}),")"]}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"type-conversion-utilities",children:"Type Conversion Utilities"}),"\n",(0,r.jsx)(i.p,{children:"The library provides type conversion utilities to bridge between Nitro types and TypeScript interfaces:"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-typescript",children:"import {\n  convertNitroProductToProduct,\n  convertNitroPurchaseToPurchase,\n  validateNitroProduct,\n  validateNitroPurchase,\n} from 'react-native-iap/utils/type-bridge';\n"})}),"\n",(0,r.jsx)(i.h2,{id:"error-types",children:"Error Types"}),"\n",(0,r.jsx)(i.p,{children:"Error handling types follow the OpenIAP specification:"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-typescript",children:"interface NitroPurchaseResult {\n  responseCode: number;\n  debugMessage?: string;\n  code: string;\n  message: string;\n  purchaseToken?: string;\n}\n"})}),"\n",(0,r.jsxs)(i.p,{children:["For detailed error codes, see the ",(0,r.jsx)(i.a,{href:"./error-codes",children:"Error Codes"})," documentation."]}),"\n",(0,r.jsx)(i.h2,{id:"migration-notes",children:"Migration Notes"}),"\n",(0,r.jsx)(i.h3,{id:"from-v13x-to-v1400-rc",children:"From v13.x to v14.0.0-rc"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["All types now use the ",(0,r.jsx)(i.code,{children:"Nitro"})," prefix for native bridge types"]}),"\n",(0,r.jsxs)(i.li,{children:["Platform-specific types use clear suffixes (",(0,r.jsx)(i.code,{children:"IOS"}),", ",(0,r.jsx)(i.code,{children:"Android"}),")"]}),"\n",(0,r.jsx)(i.li,{children:"Type conversion utilities handle the bridge between Nitro and TypeScript types"}),"\n"]}),"\n",(0,r.jsx)(i.p,{children:"For complete type definitions, refer to:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.strong,{children:(0,r.jsx)(i.a,{href:"https://www.openiap.dev/docs/types",children:"OpenIAP Types Documentation"})})}),"\n",(0,r.jsxs)(i.li,{children:["Source code: ",(0,r.jsx)(i.code,{children:"src/specs/RnIap.nitro.ts"})]}),"\n"]})]})}function h(e={}){const{wrapper:i}={...(0,s.R)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},8453:(e,i,n)=>{n.d(i,{R:()=>o,x:()=>c});var t=n(6540);const r={},s=t.createContext(r);function o(e){const i=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function c(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),t.createElement(s.Provider,{value:i},e.children)}}}]);