"use strict";(self.webpackChunkreact_native_iap_docs=self.webpackChunkreact_native_iap_docs||[]).push([[2868],{571:(e,s,n)=>{n.d(s,{A:()=>r});var t=n(6540),i=n(4848);function a({className:e="adfit",style:s,unit:n,height:a,width:r}){return(0,t.useEffect)(()=>{const s=setTimeout(()=>{const s=document.querySelector(`.${e}`);if(!s)return void console.warn(`AdFit: Element with class "${e}" not found`);const t=s.querySelectorAll(".kakao_ad_area"),i=s.querySelectorAll('script[src*="kas/static/ba.min.js"]');t.forEach(e=>e.remove()),i.forEach(e=>e.remove());const c=document.createElement("ins"),o=document.createElement("script");c.className="kakao_ad_area",c.style.cssText="display:none; width:100%;",o.async=!0,o.type="text/javascript",o.src="//t1.daumcdn.net/kas/static/ba.min.js",c.setAttribute("data-ad-width",r.toString()),c.setAttribute("data-ad-height",a.toString()),c.setAttribute("data-ad-unit",n),s.appendChild(c),s.appendChild(o)},100);return()=>clearTimeout(s)},[e,n,a,r]),(0,i.jsx)("div",{style:s,children:(0,i.jsx)("div",{className:e})})}function r(){return(0,i.jsx)(a,{unit:"DAN-YTmjDwlbcP42HBg6",height:100,width:320,className:"adfit-top",style:{flex:1,marginTop:24,marginBottom:24}})}},5554:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>c,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"examples/available-purchases","title":"Available Purchases Example","description":"This example shows how to list and restore previously purchased items (non\u2011consumables and active subscriptions) using getAvailablePurchases() and getActiveSubscriptions().","source":"@site/docs/examples/available-purchases.md","sourceDirName":"examples","slug":"/examples/available-purchases","permalink":"/react-native-iap/docs/examples/available-purchases","draft":false,"unlisted":false,"editUrl":"https://github.com/hyochan/react-native-iap/tree/main/docs/docs/examples/available-purchases.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"title":"Available Purchases Example","sidebar_label":"Available Purchases","sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Subscriptions Flow","permalink":"/react-native-iap/docs/examples/subscription-flow"},"next":{"title":"Offer Code","permalink":"/react-native-iap/docs/examples/offer-code"}}');var i=n(4848),a=n(8453),r=n(571);const c={title:"Available Purchases Example",sidebar_label:"Available Purchases",sidebar_position:3},o="Available Purchases",l={},d=[{value:"Restore Flow",id:"restore-flow",level:2},{value:"Showing Active Subscriptions",id:"showing-active-subscriptions",level:2},{value:"Tips",id:"tips",level:2}];function u(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.header,{children:(0,i.jsx)(s.h1,{id:"available-purchases",children:"Available Purchases"})}),"\n",(0,i.jsx)(r.A,{}),"\n",(0,i.jsxs)(s.p,{children:["This example shows how to list and restore previously purchased items (non\u2011consumables and active subscriptions) using ",(0,i.jsx)(s.code,{children:"getAvailablePurchases()"})," and ",(0,i.jsx)(s.code,{children:"getActiveSubscriptions()"}),"."]}),"\n",(0,i.jsx)(s.p,{children:"View the full example source:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["GitHub: ",(0,i.jsx)(s.a,{href:"https://github.com/hyochan/react-native-iap/blob/main/example/app/available-purchases.tsx",children:"https://github.com/hyochan/react-native-iap/blob/main/example/app/available-purchases.tsx"})]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"restore-flow",children:"Restore Flow"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Ensure the store connection is active (handled by ",(0,i.jsx)(s.code,{children:"useIAP"}),")"]}),"\n",(0,i.jsxs)(s.li,{children:["Call both ",(0,i.jsx)(s.code,{children:"getAvailablePurchases()"})," and ",(0,i.jsx)(s.code,{children:"getActiveSubscriptions()"})]}),"\n",(0,i.jsx)(s.li,{children:"Validate on your server and grant entitlements"}),"\n"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-tsx",children:"import React from 'react';\nimport {Alert} from 'react-native';\nimport {useIAP} from 'react-native-iap';\n\nexport default function AvailablePurchasesScreen() {\n  const {\n    connected,\n    getAvailablePurchases,\n    getActiveSubscriptions,\n    activeSubscriptions,\n    finishTransaction,\n  } = useIAP();\n\n  const restore = async () => {\n    if (!connected) return;\n    const [purchases] = await Promise.all([\n      getAvailablePurchases(),\n      getActiveSubscriptions(),\n    ]);\n\n    for (const p of purchases) {\n      // TODO: validate on your backend first\n      // await grantEntitlement(p)\n      // Non-consumables and subscriptions typically don't require consumption\n      await finishTransaction({purchase: p, isConsumable: false});\n    }\n\n    Alert.alert('Restored', `Restored ${purchases.length} purchases`);\n  };\n\n  return null; // Render your UI and call restore() from a button\n}\n"})}),"\n",(0,i.jsx)(s.h2,{id:"showing-active-subscriptions",children:"Showing Active Subscriptions"}),"\n",(0,i.jsxs)(s.p,{children:["The hook exposes ",(0,i.jsx)(s.code,{children:"activeSubscriptions"}),", which you can render directly after calling ",(0,i.jsx)(s.code,{children:"getActiveSubscriptions()"}),":"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-tsx",children:"import {useIAP} from 'react-native-iap';\n\nfunction ActiveSubscriptionsList() {\n  const {activeSubscriptions, getActiveSubscriptions} = useIAP();\n\n  useEffect(() => {\n    getActiveSubscriptions();\n  }, [getActiveSubscriptions]);\n\n  return (\n    <View>\n      {activeSubscriptions.map((s) => (\n        <Text key={s.productId}>{s.productId}</Text>\n      ))}\n    </View>\n  );\n}\n"})}),"\n",(0,i.jsx)(s.h2,{id:"tips",children:"Tips"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Only non\u2011consumables and subscriptions are returned; consumables are not restorable"}),"\n",(0,i.jsx)(s.li,{children:"Always perform server\u2011side validation before granting access"}),"\n",(0,i.jsxs)(s.li,{children:["On iOS, you can optionally filter for active items using ",(0,i.jsx)(s.code,{children:"onlyIncludeActiveItemsIOS"})]}),"\n",(0,i.jsxs)(s.li,{children:["Android tip: If users redeem a promo code in Google Play, open ",(0,i.jsx)(s.code,{children:"https://play.google.com/redeem"})," with ",(0,i.jsx)(s.code,{children:"Linking.openURL(...)"})," and then refresh with ",(0,i.jsx)(s.code,{children:"getAvailablePurchases()"})," and ",(0,i.jsx)(s.code,{children:"getActiveSubscriptions()"})]}),"\n"]})]})}function p(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>r,x:()=>c});var t=n(6540);const i={},a=t.createContext(i);function r(e){const s=t.useContext(a);return t.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),t.createElement(a.Provider,{value:s},e.children)}}}]);