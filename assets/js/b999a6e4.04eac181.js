"use strict";(self.webpackChunkreact_native_iap_docs=self.webpackChunkreact_native_iap_docs||[]).push([[6212],{571:(e,n,r)=>{r.d(n,{A:()=>o});var t=r(6540),s=r(4848);function i({className:e="adfit",style:n,unit:r,height:i,width:o}){return(0,t.useEffect)(()=>{const n=setTimeout(()=>{const n=document.querySelector(`.${e}`);if(!n)return void console.warn(`AdFit: Element with class "${e}" not found`);const t=n.querySelectorAll(".kakao_ad_area"),s=n.querySelectorAll('script[src*="kas/static/ba.min.js"]');t.forEach(e=>e.remove()),s.forEach(e=>e.remove());const a=document.createElement("ins"),c=document.createElement("script");a.className="kakao_ad_area",a.style.cssText="display:none; width:100%;",c.async=!0,c.type="text/javascript",c.src="//t1.daumcdn.net/kas/static/ba.min.js",a.setAttribute("data-ad-width",o.toString()),a.setAttribute("data-ad-height",i.toString()),a.setAttribute("data-ad-unit",r),n.appendChild(a),n.appendChild(c)},100);return()=>clearTimeout(n)},[e,r,i,o]),(0,s.jsx)("div",{style:n,children:(0,s.jsx)("div",{className:e})})}function o(){return(0,s.jsx)(i,{unit:"DAN-YTmjDwlbcP42HBg6",height:100,width:320,className:"adfit-top",style:{flex:1,marginTop:24,marginBottom:24}})}},8453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>a});var t=r(6540);const s={},i=t.createContext(s);function o(e){const n=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),t.createElement(i.Provider,{value:n},e.children)}},8567:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>u,frontMatter:()=>a,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"api/types","title":"Types","description":"The react-native-iap type surface is now generated in one placetypes to refresh the file.","source":"@site/docs/api/types.md","sourceDirName":"api","slug":"/api/types","permalink":"/react-native-iap/docs/api/types","draft":false,"unlisted":false,"editUrl":"https://github.com/hyochan/react-native-iap/tree/main/docs/docs/api/types.md","tags":[],"version":"current","frontMatter":{}}');var s=r(4848),i=r(8453),o=r(571);const a={},c="Types",d={},l=[{value:"Core Type Aliases",id:"core-type-aliases",level:2},{value:"Product Types",id:"product-types",level:2},{value:"Purchase Types",id:"purchase-types",level:2},{value:"Active Subscriptions",id:"active-subscriptions",level:2},{value:"Request Parameters",id:"request-parameters",level:2},{value:"Receipt Validation",id:"receipt-validation",level:2},{value:"Where to Find Everything",id:"where-to-find-everything",level:2}];function p(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"types",children:"Types"})}),"\n",(0,s.jsx)(o.A,{}),"\n",(0,s.jsxs)(n.p,{children:["The react-native-iap type surface is now generated in one place: ",(0,s.jsx)(n.code,{children:"src/types.ts"}),". The file is produced by our GraphQL schema and represents the canonical source for all product, purchase, subscription, and request shapes. After updating any schema definitions, run ",(0,s.jsx)(n.code,{children:"bun run generate:types"})," to refresh the file."]}),"\n",(0,s.jsx)(n.p,{children:"Key runtime helpers that build on these types live alongside them:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"src/types.ts"})," \u2013 auto-generated enums and interfaces"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"src/utils/errorMapping.ts"})," \u2013 typed error helpers (",(0,s.jsx)(n.code,{children:"createPurchaseError"}),", ",(0,s.jsx)(n.code,{children:"ErrorCodeUtils"}),")"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"src/helpers/subscription.ts"})," \u2013 subscription utilities that re-export ",(0,s.jsx)(n.code,{children:"ActiveSubscription"})]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Below is a curated overview of the most commonly used types. Consult ",(0,s.jsx)(n.code,{children:"src/types.ts"})," for the full schema."]}),"\n",(0,s.jsx)(n.h2,{id:"core-type-aliases",children:"Core Type Aliases"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"export type IapPlatform = 'android' | 'ios';\n\nexport type ProductType = 'in-app' | 'subs';\n\nexport type PurchaseState =\n  | 'deferred'\n  | 'failed'\n  | 'pending'\n  | 'purchased'\n  | 'restored'\n  | 'unknown';\n"})}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"ErrorCode"})," enum now mirrors the OpenIAP schema without the legacy ",(0,s.jsx)(n.code,{children:"E_"})," prefix:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"export enum ErrorCode {\n  ActivityUnavailable = 'ACTIVITY_UNAVAILABLE',\n  AlreadyOwned = 'ALREADY_OWNED',\n  ...\n  Unknown = 'UNKNOWN',\n  UserCancelled = 'USER_CANCELLED',\n  UserError = 'USER_ERROR',\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Use ",(0,s.jsx)(n.code,{children:"createPurchaseError"})," from ",(0,s.jsx)(n.code,{children:"src/utils/errorMapping.ts"})," to work with typed errors and platform mappings."]}),"\n",(0,s.jsx)(n.h2,{id:"product-types",children:"Product Types"}),"\n",(0,s.jsxs)(n.p,{children:["All products share the generated ",(0,s.jsx)(n.code,{children:"ProductCommon"})," interface. Platform extensions discriminate on the ",(0,s.jsx)(n.code,{children:"platform"})," field via the ",(0,s.jsx)(n.code,{children:"IapPlatform"})," string union."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"export interface ProductCommon {\n  id: string;\n  title: string;\n  description: string;\n  type: ProductType;\n  displayName?: string | null;\n  displayPrice: string;\n  currency: string;\n  price?: number | null;\n  platform: IapPlatform;\n}\n\nexport interface ProductAndroid extends ProductCommon {\n  nameAndroid: string;\n  oneTimePurchaseOfferDetailsAndroid?: ProductAndroidOneTimePurchaseOfferDetail | null;\n  subscriptionOfferDetailsAndroid?:\n    | ProductSubscriptionAndroidOfferDetails[]\n    | null;\n}\n\nexport interface ProductIOS extends ProductCommon {\n  displayNameIOS: string;\n  isFamilyShareableIOS: boolean;\n  jsonRepresentationIOS: string;\n  typeIOS: ProductTypeIOS;\n  subscriptionInfoIOS?: SubscriptionInfoIOS | null;\n}\n\nexport type Product = ProductAndroid | ProductIOS;\nexport type ProductSubscription =\n  | ProductSubscriptionAndroid\n  | ProductSubscriptionIOS;\n"})}),"\n",(0,s.jsx)(n.h2,{id:"purchase-types",children:"Purchase Types"}),"\n",(0,s.jsxs)(n.p,{children:["Purchases share the ",(0,s.jsx)(n.code,{children:"PurchaseCommon"})," shape and discriminate on the same ",(0,s.jsx)(n.code,{children:"platform"})," union. Both variants expose the unified ",(0,s.jsx)(n.code,{children:"purchaseToken"})," field for server validation."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"export interface PurchaseCommon {\n  id: string;\n  productId: string;\n  platform: IapPlatform;\n  purchaseState: PurchaseState;\n  transactionDate: number;\n  quantity: number;\n  isAutoRenewing: boolean;\n  purchaseToken?: string | null;\n  ids?: string[] | null;\n}\n\nexport interface PurchaseAndroid extends PurchaseCommon {\n  autoRenewingAndroid?: boolean | null;\n  packageNameAndroid?: string | null;\n  signatureAndroid?: string | null;\n  dataAndroid?: string | null;\n}\n\nexport interface PurchaseIOS extends PurchaseCommon {\n  appAccountToken?: string | null;\n  environmentIOS?: string | null;\n  expirationDateIOS?: number | null;\n  originalTransactionIdentifierIOS?: string | null;\n  offerIOS?: PurchaseOfferIOS | null;\n}\n\nexport type Purchase = PurchaseAndroid | PurchaseIOS;\n"})}),"\n",(0,s.jsx)(n.h2,{id:"active-subscriptions",children:"Active Subscriptions"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"ActiveSubscription"})," is now part of the generated schema and shared across helpers."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"export interface ActiveSubscription {\n  productId: string;\n  isActive: boolean;\n  transactionId: string;\n  transactionDate: number;\n  purchaseToken?: string | null;\n  autoRenewingAndroid?: boolean | null;\n  environmentIOS?: string | null;\n  expirationDateIOS?: number | null;\n  daysUntilExpirationIOS?: number | null;\n  willExpireSoon?: boolean | null;\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["The helper ",(0,s.jsx)(n.code,{children:"getActiveSubscriptions"})," in ",(0,s.jsx)(n.code,{children:"src/helpers/subscription.ts"})," converts ",(0,s.jsx)(n.code,{children:"Purchase"})," records into this shape and re-exports the type for convenience."]}),"\n",(0,s.jsx)(n.h2,{id:"request-parameters",children:"Request Parameters"}),"\n",(0,s.jsx)(n.p,{children:"The request types have been harmonised to match the schema definitions."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"export interface RequestPurchasePropsByPlatforms {\n  android?: RequestPurchaseAndroidProps | null;\n  ios?: RequestPurchaseIosProps | null;\n}\n\nexport interface RequestSubscriptionPropsByPlatforms {\n  android?: RequestSubscriptionAndroidProps | null;\n  ios?: RequestSubscriptionIosProps | null;\n}\n\nexport type MutationRequestPurchaseArgs =\n  | {\n      request: RequestPurchasePropsByPlatforms;\n      type: 'in-app';\n    }\n  | {\n      request: RequestSubscriptionPropsByPlatforms;\n      type: 'subs';\n    };\n"})}),"\n",(0,s.jsx)(n.h2,{id:"receipt-validation",children:"Receipt Validation"}),"\n",(0,s.jsx)(n.p,{children:"Receipt validation results are platform-specific unions:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"export type ReceiptValidationResult =\n  | ReceiptValidationResultAndroid\n  | ReceiptValidationResultIos;\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Use the higher-level ",(0,s.jsx)(n.code,{children:"validateReceipt"})," helper exported from ",(0,s.jsx)(n.code,{children:"src/index.ts"})," for a strongly typed wrapper around the native modules."]}),"\n",(0,s.jsx)(n.h2,{id:"where-to-find-everything",children:"Where to Find Everything"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["For the exhaustive list of enums and interfaces, open ",(0,s.jsx)(n.code,{children:"src/types.ts"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["For error handling utilities (",(0,s.jsx)(n.code,{children:"createPurchaseError"}),", ",(0,s.jsx)(n.code,{children:"ErrorCodeUtils"}),"), use ",(0,s.jsx)(n.code,{children:"src/utils/errorMapping.ts"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["All generated types are re-exported from the package root so consumers can import from ",(0,s.jsx)(n.code,{children:"react-native-iap"})," directly:"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"import type {\n  Product,\n  Purchase,\n  ActiveSubscription,\n  RequestPurchaseProps,\n} from 'react-native-iap';\n"})}),"\n",(0,s.jsx)(n.p,{children:"If you need to regenerate types place new schema definitions under the GraphQL inputs and rerun the generator. EOF"})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}}}]);