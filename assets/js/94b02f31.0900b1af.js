"use strict";(self.webpackChunkreact_native_iap_docs=self.webpackChunkreact_native_iap_docs||[]).push([[130],{571:(e,n,t)=>{t.d(n,{A:()=>o});var i=t(6540),r=t(4848);function s({className:e="adfit",style:n,unit:t,height:s,width:o}){return(0,i.useEffect)(()=>{const n=setTimeout(()=>{const n=document.querySelector(`.${e}`);if(!n)return void console.warn(`AdFit: Element with class "${e}" not found`);const i=n.querySelectorAll(".kakao_ad_area"),r=n.querySelectorAll('script[src*="kas/static/ba.min.js"]');i.forEach(e=>e.remove()),r.forEach(e=>e.remove());const d=document.createElement("ins"),a=document.createElement("script");d.className="kakao_ad_area",d.style.cssText="display:none; width:100%;",a.async=!0,a.type="text/javascript",a.src="//t1.daumcdn.net/kas/static/ba.min.js",d.setAttribute("data-ad-width",o.toString()),d.setAttribute("data-ad-height",s.toString()),d.setAttribute("data-ad-unit",t),n.appendChild(d),n.appendChild(a)},100);return()=>clearTimeout(n)},[e,t,s,o]),(0,r.jsx)("div",{style:n,children:(0,r.jsx)("div",{className:e})})}function o(){return(0,r.jsx)(s,{unit:"DAN-YTmjDwlbcP42HBg6",height:100,width:320,className:"adfit-top",style:{flex:1,marginTop:24,marginBottom:24}})}},744:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>d,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"guides/offer-code-redemption","title":"Offer Code Redemption","description":"This guide explains how to implement offer code redemption functionality in your app using react-native-iap.","source":"@site/docs/guides/offer-code-redemption.md","sourceDirName":"guides","slug":"/guides/offer-code-redemption","permalink":"/react-native-iap/docs/guides/offer-code-redemption","draft":false,"unlisted":false,"editUrl":"https://github.com/hyochan/react-native-iap/tree/main/docs/docs/guides/offer-code-redemption.md","tags":[],"version":"current","frontMatter":{"title":"Offer Code Redemption","sidebar_label":"Offer Code Redemption"},"sidebar":"tutorialSidebar","previous":{"title":"Subscription Validation","permalink":"/react-native-iap/docs/guides/subscription-validation"},"next":{"title":"Error Handling","permalink":"/react-native-iap/docs/guides/error-handling"}}');var r=t(4848),s=t(8453),o=t(571);const d={title:"Offer Code Redemption",sidebar_label:"Offer Code Redemption"},a="Offer Code Redemption",l={},c=[{value:"Overview",id:"overview",level:2},{value:"iOS Implementation",id:"ios-implementation",level:2},{value:"Usage",id:"usage",level:3},{value:"Important Notes",id:"important-notes",level:3},{value:"Android Implementation",id:"android-implementation",level:2},{value:"Usage",id:"usage-1",level:3},{value:"Alternative Approach",id:"alternative-approach",level:3},{value:"Complete Example",id:"complete-example",level:2},{value:"Best Practices",id:"best-practices",level:2},{value:"Testing",id:"testing",level:2},{value:"iOS Testing",id:"ios-testing",level:3},{value:"Android Testing",id:"android-testing",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"iOS Issues",id:"ios-issues",level:3},{value:"Android Issues",id:"android-issues",level:3}];function p(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"offer-code-redemption",children:"Offer Code Redemption"})}),"\n",(0,r.jsx)(o.A,{}),"\n",(0,r.jsx)(n.p,{children:"This guide explains how to implement offer code redemption functionality in your app using react-native-iap."}),"\n",(0,r.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsx)(n.p,{children:"Offer codes (also known as promo codes or redemption codes) allow users to redeem special offers for in-app purchases and subscriptions. The implementation differs between iOS and Android platforms."}),"\n",(0,r.jsx)(n.h2,{id:"ios-implementation",children:"iOS Implementation"}),"\n",(0,r.jsx)(n.p,{children:"On iOS, react-native-iap provides a native method to present Apple's code redemption sheet directly within your app."}),"\n",(0,r.jsx)(n.h3,{id:"usage",children:"Usage"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import {presentCodeRedemptionSheet} from 'react-native-iap';\n\n// Present the code redemption sheet\ntry {\n  const result = await presentCodeRedemptionSheet();\n  if (result) {\n    console.log('Code redemption sheet presented successfully');\n    // The system will handle the redemption process\n    // Listen for purchase updates via purchaseUpdatedListener\n  }\n} catch (error) {\n  console.error('Failed to present code redemption sheet:', error);\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"important-notes",children:"Important Notes"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"This method only works on real iOS devices (not simulators)"}),"\n",(0,r.jsx)(n.li,{children:"Not available on tvOS"}),"\n",(0,r.jsx)(n.li,{children:"The redemption sheet is handled by the iOS system"}),"\n",(0,r.jsxs)(n.li,{children:["After successful redemption, purchase updates will be delivered through your existing ",(0,r.jsx)(n.code,{children:"purchaseUpdatedListener"})]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"android-implementation",children:"Android Implementation"}),"\n",(0,r.jsx)(n.p,{children:"Google Play does not provide a direct API to redeem codes within the app. Instead, users must redeem codes through the Google Play Store app or website."}),"\n",(0,r.jsx)(n.h3,{id:"usage-1",children:"Usage"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import {openRedeemOfferCodeAndroid} from 'react-native-iap';\n\n// Open Google Play Store redemption page\ntry {\n  await openRedeemOfferCodeAndroid();\n  // This will open the Play Store where users can enter their codes\n} catch (error) {\n  console.error('Failed to open Play Store:', error);\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"alternative-approach",children:"Alternative Approach"}),"\n",(0,r.jsx)(n.p,{children:"You can also direct users to redeem codes via a custom deep link:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import {Linking} from 'react-native';\n\nconst redeemCode = async (code: string) => {\n  const url = `https://play.google.com/redeem?code=${code}`;\n  await Linking.openURL(url);\n};\n"})}),"\n",(0,r.jsx)(n.h2,{id:"complete-example",children:"Complete Example"}),"\n",(0,r.jsx)(n.p,{children:"Here's a complete example that handles both platforms:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import {Platform} from 'react-native';\nimport {\n  presentCodeRedemptionSheet,\n  openRedeemOfferCodeAndroid,\n  purchaseUpdatedListener,\n} from 'react-native-iap';\n\nconst handleRedeemCode = async () => {\n  try {\n    if (Platform.OS === 'ios') {\n      // Present native iOS redemption sheet\n      const result = await presentCodeRedemptionSheet();\n      if (result) {\n        console.log('Redemption sheet presented');\n      }\n    } else if (Platform.OS === 'android') {\n      // Open Play Store for Android\n      await openRedeemOfferCodeAndroid();\n    }\n  } catch (error) {\n    console.error('Error redeeming code:', error);\n  }\n};\n\n// Set up listener for purchase updates after redemption\nuseEffect(() => {\n  const subscription = purchaseUpdatedListener((purchase) => {\n    console.log('Purchase updated after redemption:', purchase);\n    // Handle the new purchase/subscription\n  });\n\n  return () => {\n    subscription.remove();\n  };\n}, []);\n"})}),"\n",(0,r.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"User Experience"}),": Clearly communicate to users where they can find and how to use offer codes"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Error Handling"}),": Always wrap redemption calls in try-catch blocks"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Platform Detection"}),": Use platform-specific methods appropriately"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Purchase Validation"}),": Always validate purchases on your server after redemption"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"testing",children:"Testing"}),"\n",(0,r.jsx)(n.h3,{id:"ios-testing",children:"iOS Testing"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Offer codes can only be tested on real devices"}),"\n",(0,r.jsx)(n.li,{children:"Use TestFlight or App Store Connect to generate test codes"}),"\n",(0,r.jsx)(n.li,{children:"Sandbox environment supports offer code testing"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"android-testing",children:"Android Testing"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Test with promo codes generated in Google Play Console"}),"\n",(0,r.jsx)(n.li,{children:"Ensure your app is properly configured for in-app purchases"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,r.jsx)(n.h3,{id:"ios-issues",children:"iOS Issues"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:'"Not available on simulator"'}),": Use a real device for testing"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Sheet doesn't appear"}),": Ensure StoreKit is properly configured"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"User cancellation"}),": This is normal behavior and doesn't throw an error"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"android-issues",children:"Android Issues"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Play Store doesn't open"}),": Check if Play Store is installed and updated"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Invalid code"}),": Verify the code format and validity in Play Console"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>d});var i=t(6540);const r={},s=i.createContext(r);function o(e){const n=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);