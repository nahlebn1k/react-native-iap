"use strict";(self.webpackChunkreact_native_iap_docs=self.webpackChunkreact_native_iap_docs||[]).push([[8702],{571:(e,r,n)=>{n.d(r,{A:()=>s});var o=n(6540),t=n(4848);function a({className:e="adfit",style:r,unit:n,height:a,width:s}){return(0,o.useEffect)(()=>{const r=setTimeout(()=>{const r=document.querySelector(`.${e}`);if(!r)return void console.warn(`AdFit: Element with class "${e}" not found`);const o=r.querySelectorAll(".kakao_ad_area"),t=r.querySelectorAll('script[src*="kas/static/ba.min.js"]');o.forEach(e=>e.remove()),t.forEach(e=>e.remove());const i=document.createElement("ins"),c=document.createElement("script");i.className="kakao_ad_area",i.style.cssText="display:none; width:100%;",c.async=!0,c.type="text/javascript",c.src="//t1.daumcdn.net/kas/static/ba.min.js",i.setAttribute("data-ad-width",s.toString()),i.setAttribute("data-ad-height",a.toString()),i.setAttribute("data-ad-unit",n),r.appendChild(i),r.appendChild(c)},100);return()=>clearTimeout(r)},[e,n,a,s]),(0,t.jsx)("div",{style:r,children:(0,t.jsx)("div",{className:e})})}function s(){return(0,t.jsx)(a,{unit:"DAN-YTmjDwlbcP42HBg6",height:100,width:320,className:"adfit-top",style:{flex:1,marginTop:24,marginBottom:24}})}},8453:(e,r,n)=>{n.d(r,{R:()=>s,x:()=>i});var o=n(6540);const t={},a=o.createContext(t);function s(e){const r=o.useContext(a);return o.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function i(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),o.createElement(a.Provider,{value:r},e.children)}},9483:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>d,contentTitle:()=>c,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"api/error-codes","title":"Error Codes","description":"React Native IAP uses standardized error codes that conform to the OpenIAP specification.","source":"@site/versioned_docs/version-14.2/api/error-codes.md","sourceDirName":"api","slug":"/api/error-codes","permalink":"/react-native-iap/docs/14.2/api/error-codes","draft":false,"unlisted":false,"editUrl":"https://github.com/hyochan/react-native-iap/tree/main/docs/versioned_docs/version-14.2/api/error-codes.md","tags":[],"version":"14.2","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"useIAP Hook","permalink":"/react-native-iap/docs/14.2/api/use-iap"},"next":{"title":"Getting Started","permalink":"/react-native-iap/docs/14.2/guides/getting-started"}}');var t=n(4848),a=n(8453),s=n(571);const i={sidebar_position:2},c="Error Codes",d={},l=[{value:"OpenIAP Error Documentation",id:"openiap-error-documentation",level:2},{value:"Basic Usage Example",id:"basic-usage-example",level:2},{value:"Advanced Error Handling with Retry",id:"advanced-error-handling-with-retry",level:2},{value:"Platform-Specific Error Handling",id:"platform-specific-error-handling",level:2},{value:"Error Logging",id:"error-logging",level:2},{value:"See Also",id:"see-also",level:2}];function p(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.header,{children:(0,t.jsx)(r.h1,{id:"error-codes",children:"Error Codes"})}),"\n",(0,t.jsx)(s.A,{}),"\n",(0,t.jsx)(r.p,{children:"React Native IAP uses standardized error codes that conform to the OpenIAP specification."}),"\n",(0,t.jsx)(r.h2,{id:"openiap-error-documentation",children:"OpenIAP Error Documentation"}),"\n",(0,t.jsx)(r.p,{children:"For comprehensive error code definitions, error handling patterns, and platform-specific error mappings, please refer to:"}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsxs)(r.strong,{children:["\ud83d\udc49 ",(0,t.jsx)(r.a,{href:"https://www.openiap.dev/docs/errors",children:"OpenIAP Error Documentation"})]})}),"\n",(0,t.jsx)(r.h2,{id:"basic-usage-example",children:"Basic Usage Example"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-tsx",children:"import {useIAP, ErrorCode, PurchaseError} from 'react-native-iap';\n\nconst {requestPurchase} = useIAP({\n  onPurchaseError: (error: PurchaseError) => {\n    console.log('Error details:', {\n      code: error.code,\n      message: error.message,\n      platform: error.platform,\n    });\n\n    switch (error.code) {\n      case ErrorCode.UserCancelled:\n        // Don't show error for user cancellation\n        break;\n      case ErrorCode.NetworkError:\n        Alert.alert('Network Error', 'Please check your internet connection');\n        break;\n      case ErrorCode.ItemUnavailable:\n        Alert.alert('Item Unavailable', 'This item is not available');\n        break;\n      case ErrorCode.AlreadyOwned:\n        Alert.alert('Already Owned', 'You already own this item');\n        break;\n      case ErrorCode.DeveloperError:\n        Alert.alert('Configuration Error', 'Please contact support');\n        break;\n      default:\n        Alert.alert('Purchase Failed', error.message);\n    }\n  },\n});\n"})}),"\n",(0,t.jsx)(r.h2,{id:"advanced-error-handling-with-retry",children:"Advanced Error Handling with Retry"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-tsx",children:"const handlePurchaseWithRetry = async (productId: string, retryCount = 0) => {\n  const MAX_RETRIES = 2;\n\n  try {\n    await requestPurchase({\n      request: {\n        ios: {sku: productId},\n        android: {skus: [productId]},\n      },\n    });\n  } catch (error: any) {\n    const purchaseError = error as PurchaseError;\n\n    // Determine if we should retry\n    const retryableErrors = [\n      ErrorCode.NetworkError,\n      ErrorCode.ServiceError,\n      ErrorCode.Interrupted,\n    ];\n\n    const shouldRetry =\n      retryableErrors.includes(purchaseError.code!) && retryCount < MAX_RETRIES;\n\n    if (shouldRetry) {\n      console.log(`Retrying purchase (${retryCount + 1}/${MAX_RETRIES})`);\n      setTimeout(\n        () => {\n          handlePurchaseWithRetry(productId, retryCount + 1);\n        },\n        1000 * Math.pow(2, retryCount),\n      ); // Exponential backoff\n    } else {\n      handlePurchaseError(purchaseError);\n    }\n  }\n};\n"})}),"\n",(0,t.jsx)(r.h2,{id:"platform-specific-error-handling",children:"Platform-Specific Error Handling"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-tsx",children:"const handlePlatformSpecificError = (error: PurchaseError) => {\n  if (Platform.OS === 'ios') {\n    switch (error.code) {\n      case ErrorCode.DeferredPayment:\n        // iOS-specific: Parental approval required\n        Alert.alert('Approval Required', 'This purchase requires approval');\n        break;\n      case ErrorCode.TransactionValidationFailed:\n        // iOS-specific: StoreKit validation failed\n        Alert.alert('Validation Failed', 'Transaction could not be validated');\n        break;\n    }\n  } else if (Platform.OS === 'android') {\n    switch (error.code) {\n      case ErrorCode.BillingResponseJsonParseError:\n        // Android-specific: Billing response parse error\n        Alert.alert('Error', 'Failed to process purchase response');\n        break;\n      case ErrorCode.Pending:\n        // Android-specific: Purchase is pending\n        Alert.alert('Purchase Pending', 'Your purchase is being processed');\n        break;\n    }\n  }\n};\n"})}),"\n",(0,t.jsx)(r.h2,{id:"error-logging",children:"Error Logging"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-tsx",children:"const logError = (error: PurchaseError) => {\n  // Log to analytics service\n  analytics.track('purchase_error', {\n    error_code: error.code,\n    platform: error.platform,\n    product_id: error.productId,\n    message: error.message,\n  });\n\n  // Log to crash reporting\n  if (error.code !== ErrorCode.UserCancelled) {\n    crashlytics.recordError(error);\n  }\n};\n"})}),"\n",(0,t.jsx)(r.h2,{id:"see-also",children:"See Also"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.a,{href:"https://www.openiap.dev/docs/errors",children:"OpenIAP Error Documentation"})," - Complete error reference"]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.a,{href:"./use-iap",children:"useIAP Hook"})," - Error handling with hooks"]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.a,{href:"./types",children:"Types Reference"})," - Error type definitions"]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.a,{href:"../guides/troubleshooting",children:"Troubleshooting"})," - Common issues and solutions"]}),"\n"]})]})}function u(e={}){const{wrapper:r}={...(0,a.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}}}]);