"use strict";(self.webpackChunkreact_native_iap_docs=self.webpackChunkreact_native_iap_docs||[]).push([[8771],{571:(e,n,r)=>{r.d(n,{A:()=>i});var s=r(6540),t=r(4848);function a({className:e="adfit",style:n,unit:r,height:a,width:i}){return(0,s.useEffect)(()=>{const n=setTimeout(()=>{const n=document.querySelector(`.${e}`);if(!n)return void console.warn(`AdFit: Element with class "${e}" not found`);const s=n.querySelectorAll(".kakao_ad_area"),t=n.querySelectorAll('script[src*="kas/static/ba.min.js"]');s.forEach(e=>e.remove()),t.forEach(e=>e.remove());const c=document.createElement("ins"),l=document.createElement("script");c.className="kakao_ad_area",c.style.cssText="display:none; width:100%;",l.async=!0,l.type="text/javascript",l.src="//t1.daumcdn.net/kas/static/ba.min.js",c.setAttribute("data-ad-width",i.toString()),c.setAttribute("data-ad-height",a.toString()),c.setAttribute("data-ad-unit",r),n.appendChild(c),n.appendChild(l)},100);return()=>clearTimeout(n)},[e,r,a,i]),(0,t.jsx)("div",{style:n,children:(0,t.jsx)("div",{className:e})})}function i(){return(0,t.jsx)(a,{unit:"DAN-YTmjDwlbcP42HBg6",height:100,width:320,className:"adfit-top",style:{flex:1,marginTop:24,marginBottom:24}})}},799:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>c,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"examples/complete-impl","title":"Complete Purchase","description":"This example shows how to properly complete a purchase transaction with receipt validation and finishTransaction.","source":"@site/versioned_docs/version-14.1/examples/complete-impl.md","sourceDirName":"examples","slug":"/examples/complete-impl","permalink":"/react-native-iap/docs/14.1/examples/complete-impl","draft":false,"unlisted":false,"editUrl":"https://github.com/hyochan/react-native-iap/tree/main/docs/versioned_docs/version-14.1/examples/complete-impl.md","tags":[],"version":"14.1","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Basic Store","permalink":"/react-native-iap/docs/14.1/examples/basic-store"},"next":{"title":"Subscriptions","permalink":"/react-native-iap/docs/14.1/examples/subscription-manager"}}');var t=r(4848),a=r(8453),i=r(571);const c={sidebar_position:3},l="Complete Purchase",o={},d=[{value:"Complete Example",id:"complete-example",level:2},{value:"Complete Purchase Flow",id:"complete-purchase-flow",level:2},{value:"1. Setup Purchase Listeners",id:"1-setup-purchase-listeners",level:3},{value:"2. Handle Successful Purchase",id:"2-handle-successful-purchase",level:3},{value:"3. Handle Purchase Errors",id:"3-handle-purchase-errors",level:3},{value:"4. Initiate Purchase",id:"4-initiate-purchase",level:3},{value:"Key Implementation Points",id:"key-implementation-points",level:2},{value:"Receipt Validation",id:"receipt-validation",level:3},{value:"Platform-Specific Receipt Data",id:"platform-specific-receipt-data",level:3},{value:"Transaction Completion",id:"transaction-completion",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"Complete Working Example",id:"complete-working-example",level:2},{value:"See Also",id:"see-also",level:2}];function p(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"complete-purchase",children:"Complete Purchase"})}),"\n",(0,t.jsx)(i.A,{}),"\n",(0,t.jsx)(n.p,{children:"This example shows how to properly complete a purchase transaction with receipt validation and finishTransaction."}),"\n",(0,t.jsx)(n.h2,{id:"complete-example",children:"Complete Example"}),"\n",(0,t.jsx)(n.p,{children:"For a production-ready purchase implementation, please refer to our complete example:"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsxs)(n.strong,{children:["\ud83d\udcf1 ",(0,t.jsx)(n.a,{href:"https://github.com/hyochan/react-native-iap/blob/main/example/screens/PurchaseFlow.tsx",children:"PurchaseFlow.tsx"})]})}),"\n",(0,t.jsx)(n.p,{children:"This example demonstrates:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"\u2705 Complete purchase flow with event listeners"}),"\n",(0,t.jsx)(n.li,{children:"\u2705 Product loading and display"}),"\n",(0,t.jsx)(n.li,{children:"\u2705 Purchase request handling"}),"\n",(0,t.jsx)(n.li,{children:"\u2705 Transaction completion with finishTransaction"}),"\n",(0,t.jsx)(n.li,{children:"\u2705 Platform-specific receipt handling"}),"\n",(0,t.jsx)(n.li,{children:"\u2705 Error handling and user feedback"}),"\n",(0,t.jsx)(n.li,{children:"\u2705 Purchase result display"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"complete-purchase-flow",children:"Complete Purchase Flow"}),"\n",(0,t.jsx)(n.p,{children:"The critical steps after initiating a purchase are handling the purchase event, validating the receipt, and finishing the transaction."}),"\n",(0,t.jsx)(n.h3,{id:"1-setup-purchase-listeners",children:"1. Setup Purchase Listeners"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"import {\n  purchaseUpdatedListener,\n  purchaseErrorListener,\n  type Purchase,\n  type NitroPurchaseResult,\n} from 'react-native-iap';\n\nuseEffect(() => {\n  // Set up purchase success listener\n  const updateSubscription = purchaseUpdatedListener((purchase: Purchase) => {\n    handlePurchaseUpdate(purchase);\n  });\n\n  // Set up purchase error listener\n  const errorSubscription = purchaseErrorListener(\n    (error: NitroPurchaseResult) => {\n      handlePurchaseError(error);\n    },\n  );\n\n  // Cleanup\n  return () => {\n    updateSubscription.remove();\n    errorSubscription.remove();\n  };\n}, []);\n"})}),"\n",(0,t.jsx)(n.h3,{id:"2-handle-successful-purchase",children:"2. Handle Successful Purchase"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"const handlePurchaseUpdate = async (purchase: Purchase) => {\n  console.log('\u2705 Purchase successful:', purchase);\n\n  try {\n    // Step 1: Validate receipt (implement server-side validation)\n    const isValid = await validateReceiptOnServer(purchase);\n\n    if (isValid) {\n      // Step 2: Grant purchase to user\n      await grantPurchaseToUser(purchase);\n\n      // Step 3: Finish the transaction (required)\n      await finishTransaction({\n        purchase,\n        isConsumable: true, // Set based on your product type\n      });\n\n      console.log('Transaction finished successfully');\n      Alert.alert('Success', 'Thank you for your purchase!');\n    } else {\n      Alert.alert('Error', 'Purchase validation failed');\n    }\n  } catch (error) {\n    console.error('Failed to complete purchase:', error);\n    Alert.alert('Error', 'Failed to process purchase');\n  }\n};\n"})}),"\n",(0,t.jsx)(n.h3,{id:"3-handle-purchase-errors",children:"3. Handle Purchase Errors"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"const handlePurchaseError = (error: NitroPurchaseResult) => {\n  console.error('\u274c Purchase failed:', error);\n\n  if (error.code === 'E_USER_CANCELLED') {\n    // User cancelled - no action needed\n    console.log('User cancelled the purchase');\n  } else {\n    Alert.alert('Purchase Failed', error.message || 'Unknown error');\n  }\n};\n"})}),"\n",(0,t.jsx)(n.h3,{id:"4-initiate-purchase",children:"4. Initiate Purchase"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"const handlePurchase = async (productId: string) => {\n  try {\n    // Request purchase - results come through event listeners\n    await requestPurchase({\n      request: {\n        ios: {\n          sku: productId,\n          quantity: 1,\n        },\n        android: {\n          skus: [productId],\n        },\n      },\n      type: 'in-app',\n    });\n\n    // Purchase result will be handled by purchaseUpdatedListener\n    console.log('Purchase request sent - waiting for result');\n  } catch (error) {\n    console.error('Purchase request failed:', error);\n    Alert.alert('Error', 'Failed to initiate purchase');\n  }\n};\n"})}),"\n",(0,t.jsx)(n.h2,{id:"key-implementation-points",children:"Key Implementation Points"}),"\n",(0,t.jsx)(n.h3,{id:"receipt-validation",children:"Receipt Validation"}),"\n",(0,t.jsx)(n.p,{children:"Always validate receipts server-side before granting purchases:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"const validateReceiptOnServer = async (purchase: Purchase) => {\n  const receipt =\n    Platform.OS === 'ios'\n      ? purchase.transactionReceipt\n      : purchase.purchaseToken;\n\n  const response = await fetch('https://your-server.com/validate', {\n    method: 'POST',\n    headers: {'Content-Type': 'application/json'},\n    body: JSON.stringify({\n      platform: Platform.OS,\n      productId: purchase.productId,\n      receipt: receipt,\n      transactionId: purchase.id,\n    }),\n  });\n\n  const result = await response.json();\n  return result.isValid;\n};\n"})}),"\n",(0,t.jsx)(n.h3,{id:"platform-specific-receipt-data",children:"Platform-Specific Receipt Data"}),"\n",(0,t.jsx)(n.p,{children:"Different platforms provide different receipt formats:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"// iOS Receipt\nconst iosReceipt = purchase.transactionReceipt; // Base64 receipt\nconst purchaseToken = purchase.purchaseToken; // JWS representation on iOS (StoreKit 2), purchase token on Android\n// Note: jwsRepresentationIOS is deprecated, use purchaseToken instead\n\n// Android Receipt\nconst androidReceipt = (purchase as any).dataAndroid; // Purchase data JSON\nconst signature = (purchase as any).signatureAndroid; // Signature for validation\n"})}),"\n",(0,t.jsx)(n.h3,{id:"transaction-completion",children:"Transaction Completion"}),"\n",(0,t.jsxs)(n.p,{children:["Always call ",(0,t.jsx)(n.code,{children:"finishTransaction"})," after processing:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"await finishTransaction({\n  purchase,\n  isConsumable: true, // true for consumable products\n});\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Consumable products"}),": Set ",(0,t.jsx)(n.code,{children:"isConsumable: true"})," (can be purchased multiple times)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Non-consumables & Subscriptions"}),": Set ",(0,t.jsx)(n.code,{children:"isConsumable: false"})," (one-time purchase)"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Always use event listeners"})," - Purchase results come through listeners, not return values"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Validate receipts server-side"})," - Never trust client-side validation alone"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Call finishTransaction"})," - Required to complete the transaction"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Handle all error cases"})," - Including user cancellation"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Provide user feedback"})," - Show loading states and results"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Store transaction records"})," - Keep purchase history in your backend"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"complete-working-example",children:"Complete Working Example"}),"\n",(0,t.jsxs)(n.p,{children:["See the full implementation: ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"https://github.com/hyochan/react-native-iap/tree/main/example/screens/PurchaseFlow.tsx",children:"PurchaseFlow.tsx"})})]}),"\n",(0,t.jsx)(n.h2,{id:"see-also",children:"See Also"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"./basic-store",children:"Basic Store Example"})," - Simple product purchase flow"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"./subscription-manager",children:"Subscription Manager"})," - Subscription-specific implementation"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"../api/use-iap",children:"useIAP Hook"})," - Alternative React Hook approach"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"../api/error-codes",children:"Error Handling"})," - Comprehensive error management"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>c});var s=r(6540);const t={},a=s.createContext(t);function i(e){const n=s.useContext(a);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);